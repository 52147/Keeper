{"version":3,"sources":["components/CreateArea.jsx","components/Footer.jsx","components/Header.jsx","components/Note.jsx","components/App.jsx","index.js"],"names":["CreateArea","props","_useState","useState","_useState2","Object","slicedToArray","isExpanded","setExpanded","_useState3","title","content","_useState4","note","setNote","handleChange","event","_event$target","target","name","value","prevNote","objectSpread","defineProperty","react_default","a","createElement","className","onChange","placeholder","onClick","rows","Zoom","in","Fab","onAdd","preventDefault","Add_default","Footer","year","Date","getFullYear","Header","SpeakerNotes_default","Note","onDelete","id","Delete_default","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","components_Header","components_CreateArea","newNote","concat","toConsumableArray","map","components_Note","key","components_Footer","ReactDom","render","components_App","document","getElementById"],"mappings":"wOAmFeA,MA7Ef,SAAoBC,GAElB,IAAAC,EACkCC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1CK,EAAUH,EAAA,GAAEI,EAAWJ,EAAA,GAE9BK,EACwBN,mBAAS,CAC/BO,MAAO,GACPC,QAAS,KACTC,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAHKI,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAMpB,SAASG,EAAaC,GAAO,IAAAC,EACHD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdN,EAAQ,SAACO,GACP,OAAOhB,OAAAiB,EAAA,EAAAjB,CAAA,GACFgB,EAAShB,OAAAkB,EAAA,EAAAlB,CAAA,GACXc,EAAOC,MAyBd,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAIZpB,GACEiB,EAAAC,EAAAC,cAAA,SACEP,KAAK,QACLS,SAAUb,EACVK,MAAOP,EAAKH,MACZmB,YAAY,UAIlBL,EAAAC,EAAAC,cAAA,YACEP,KAAK,UACLW,QAvBR,WACEtB,GAAY,IAuBNoB,SAAUb,EACVK,MAAOP,EAAKF,QACZkB,YAAY,iBAEZE,KAAMxB,EAAa,EAAI,IAGzBiB,EAAAC,EAAAC,cAACM,EAAA,EAAI,CAACC,GAAI1B,GACRiB,EAAAC,EAAAC,cAACQ,EAAA,EAAG,CAACJ,QA5Cb,SAAoBd,GAClBf,EAAMkC,MAAMtB,GACZC,EAAQ,CACNJ,MAAO,GACPC,QAAS,KAEXK,EAAMoB,mBAuCEZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAO,WChELa,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACEjB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,6BAAgBa,sBCQPG,MAXf,WACE,OACElB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACiB,EAAAlB,EAAgB,MAAG,6BCmBbmB,MApBf,SAAc3C,GASZ,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKzB,EAAMS,OACXc,EAAAC,EAAAC,cAAA,SAAIzB,EAAMU,SACVa,EAAAC,EAAAC,cAAA,UAAQI,QAZZ,WAEE7B,EAAM4C,SAAS5C,EAAM6C,MAWjBtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAU,SCgCJuB,MA7Cf,WAEE,IAAA9C,EAC0BC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/B+C,EAAK7C,EAAA,GAAE8C,EAAQ9C,EAAA,GAUtB,SAAS+C,EAAWL,GAClBI,EAAS,SAACE,GACR,OAAOA,EAAUC,OAAO,SAACC,EAAUC,GACjC,OAAOA,IAAUT,MAKvB,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAM,MACPhC,EAAAC,EAAAC,cAAC+B,EAAU,CAACtB,MAlBhB,SAAiBuB,GACfR,EAAS,SAACE,GACR,SAAAO,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAW+C,GAAS,CAAEM,SAiBrBT,EAAMY,IAAI,SAACP,EAAUC,GAKpB,OACE/B,EAAAC,EAAAC,cAACoC,EAAI,CACHC,IAAKR,EACLT,GAAIS,EACJ7C,MAAO4C,EAAS5C,MAChBC,QAAS2C,EAAS3C,QAClBkC,SAAUM,MAIhB3B,EAAAC,EAAAC,cAACsC,EAAM,QC3CbC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAG,MAAKC,SAASC,eAAe","file":"static/js/main.e26c3857.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\"; // Floating action button\nimport Zoom from \"@mui/material/Zoom\"; // Zoom transition can be used to expand the material\n\n// Props are used to communicate between components.\nfunction CreateArea(props) {\n  // useState hook to track the isExpanded state\n  // const[current sate of block, update block to expand] = useState(false);\n  const [isExpanded, setExpanded] = useState(false);\n\n  // useState hook to track the user input note\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  // handle the change when user click\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n  // sumbmit function:\n  // when we click submit, note be added in app.jsx\n  // and set the note sate to empty title and empty content\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault(); // preventDefault : cancel the event of submitting\n  }\n\n  // when expand be called, we set the isExpanded to true\n  // when text area be click, isExpanded become true.\n  // when isEpand is true, we render the title, content and fab\n  function expand() {\n    setExpanded(true);\n  }\n\n  // zoom in = {true} : if true, component will transition in\n  // so isExpanded is true, fab will render\n  return (\n    <div>\n      <form className=\"create-note\">\n        {\n          // isExpanded become true, we render the title, content\n          // otherwise we'll render nothing\n          isExpanded && (\n            <input\n              name=\"title\"\n              onChange={handleChange}\n              value={note.title}\n              placeholder=\"Title\"\n            />\n          )\n        }\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          // if isExpanded is true, we render 3 rows, otherwise we render 1 row\n          rows={isExpanded ? 3 : 1}\n        />\n\n        <Zoom in={isExpanded}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport SpeakerNotesIcon from \"@mui/icons-material/SpeakerNotes\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <SpeakerNotesIcon />\n        Keeper\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\n// use props to let Note and App communicate\n// Pass data to props in the App component\n// when App get the data, it will pass as props to Note\nfunction Note(props) {\n  function handleClick() {\n    // onDelete() will triger the deleteNote() at App.jsx\n    props.onDelete(props.id);\n  }\n  // render the props properties title and content\n  // wher user click the delete buttom\n  // will go to handleClick function\n  // and handleClick() will trigger deleteNote() and delete the node\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","// import use state\nimport React, { useState } from \"react\";\nimport CreateArea from \"./CreateArea\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Note from \"./Note\";\n\nfunction App() {\n  // use useState hook to track the state in the addNote and deleteNote function\n  // const[current state, update function] = useState(initialize state);\n  const [notes, setNotes] = useState([]);\n\n  // add Note function : set the new note in array\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote]; // add newNote in exisiting array\n    }); // ... spread operator: ...prevNotes copy of existing array\n  }\n\n  // delete Note function : set the note that filter out the noy matched id item in the array\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        // use map function and Note component to\n        // displat the each Note\n        // map function: create a new array populated with a result of calling a provided function\n        // on every element in the calling array\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}